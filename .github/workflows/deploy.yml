name: Build and Deploy Aiolos

on:
  workflow_dispatch:

jobs:
  build-and-push-backend:
    runs-on: [resonect-server]
    env:
      ENVIRONMENT: production
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.RESONECT_AWS_PROD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.RESONECT_AWS_PROD_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.RESONECT_AWS_PROD_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2

      - uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/adonis-api/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            590183887485.dkr.ecr.eu-central-1.amazonaws.com/aiolos-backend:latest
            590183887485.dkr.ecr.eu-central-1.amazonaws.com/aiolos-backend:${{ github.sha }}

  build-and-push-frontend:
    runs-on: [resonect-server]
    env:
      ENVIRONMENT: production
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.RESONECT_AWS_PROD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.RESONECT_AWS_PROD_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.RESONECT_AWS_PROD_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2

      - uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/react-frontend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            590183887485.dkr.ecr.eu-central-1.amazonaws.com/aiolos-frontend:latest
            590183887485.dkr.ecr.eu-central-1.amazonaws.com/aiolos-frontend:${{ github.sha }}

  deploy:
    needs: [build-and-push-backend, build-and-push-frontend]
    runs-on: [resonect-server]
    env:
      ENVIRONMENT: production
      AWS_ACCESS_KEY_ID: ${{ secrets.RESONECT_AWS_PROD_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.RESONECT_AWS_PROD_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.RESONECT_AWS_PROD_REGION }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare EC2 instance
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AIOLOS_PROD_EC2_HOST }}
          username: ${{ secrets.AIOLOS_PROD_EC2_USER }}
          key: ${{ secrets.RESONECT_AWS_PROD_SSH_KEY }}
          script: |
            # Create directory if it doesn't exist
            mkdir -p ~/aiolos

      - name: Copy configuration files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AIOLOS_PROD_EC2_HOST }}
          username: ${{ secrets.AIOLOS_PROD_EC2_USER }}
          key: ${{ secrets.RESONECT_AWS_PROD_SSH_KEY }}
          source: ./infra/docker-compose.prod.yml,./infra/Caddyfile,./apps/adonis-api/.env
          target: ~/aiolos
          strip_components: 2

      - name: Deploy with docker-compose over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AIOLOS_PROD_EC2_HOST }}
          username: ${{ secrets.AIOLOS_PROD_EC2_USER }}
          key: ${{ secrets.RESONECT_AWS_PROD_SSH_KEY }}
          envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION
          script: |
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            export AWS_REGION=$AWS_REGION
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 590183887485.dkr.ecr.eu-central-1.amazonaws.com
            cd ~/aiolos
            
            # Get CPU architecture
            ARCH=$(uname -m)
            echo "Running on architecture: $ARCH"
            
            # Pull and start services
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
            
      - name: Run Adonis migrations
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AIOLOS_PROD_EC2_HOST }}
          username: ${{ secrets.AIOLOS_PROD_EC2_USER }}
          key: ${{ secrets.RESONECT_AWS_PROD_SSH_KEY }}
          script: |
            cd ~/aiolos
            
            # Check if backend container is running properly
            for i in {1..12}; do
              if docker compose -f docker-compose.prod.yml ps backend | grep -q "Up"; then
                echo "Backend is up, running migrations..."
                
                # Try to run migrations
                if docker compose -f docker-compose.prod.yml exec backend node ace migration:run --force; then
                  echo "Migrations completed successfully"
                  exit 0
                else
                  echo "Migration attempt failed, will retry..."
                fi
              else
                echo "Backend container is not ready yet, waiting..."
              fi
              
              # Wait before next check
              sleep 10
            done
            
            echo "Backend container did not stabilize after 2 minutes, showing logs:"
            docker compose -f docker-compose.prod.yml logs backend --tail 100
            exit 1
